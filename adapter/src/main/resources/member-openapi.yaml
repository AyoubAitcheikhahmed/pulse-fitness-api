openapi: 3.0.0
info:
  version: "1.0.0"
  title: Member API
  license:
    name: MIT
servers:
  - url: http://api.pulse.com/v1
paths:
  /members:
    get:
      summary: List all members
      operationId: listMembers
      tags:
        - members
      parameters:
        - name: limit
          in: query
          description: How many members to return at one time (max 100)
          required: false
          schema:
            type: integer
            maximum: 100
            format: int32
      responses:
        200:
          description: A paged array of members
          headers:
            x-next:
              description: A link to the next page of responses
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Members'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Create a new member
      operationId: createMember
      tags:
        - members
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Member'
        required: true
      responses:
        201:
          description: Member successfully created
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /members/{memberId}:
    get:
      summary: Get member details by ID
      operationId: getMemberById
      tags:
        - members
      parameters:
        - name: memberId
          in: path
          required: true
          description: The ID of the member to retrieve
          schema:
            type: string
      responses:
        200:
          description: Member details retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Member'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    Member:
      type: object
      required:
        - firstName
        - lastName
        - birthDate
        - email
      properties:
        firstName:
          type: string
          description: The first name of the member
        lastName:
          type: string
          description: The last name of the member
        birthDate:
          type: string
          format: date
          description: The birth date of the member
        email:
          type: string
          format: email
          description: The email address of the member
    Members:
      type: array
      maxItems: 100
      items:
        $ref: '#/components/schemas/Member'
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
